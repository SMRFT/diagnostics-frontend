{"ast":null,"code":"var _jsxFileName = \"D:\\\\diagnostics-backend\\\\diagnostics\\\\diagnostics-frontend\\\\src\\\\Components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useTable } from '@tanstack/react-table';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableContainer = styled.div`\n  width: 80%;\n  margin: auto;\n  margin-top: 20px;\n  padding: 20px;\n  background: #f8f9fa;\n  border-radius: 10px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n`;\n_c = TableContainer;\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-family: Arial, sans-serif;\n  background: #ffffff;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n_c2 = StyledTable;\nconst Th = styled.th`\n  background: linear-gradient(to right, #ff512f, #dd2476);\n  color: white;\n  padding: 12px;\n  text-align: left;\n`;\n_c3 = Th;\nconst Td = styled.td`\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n  text-align: left;\n`;\n_c4 = Td;\nconst Tr = styled.tr`\n  &:nth-child(even) {\n    background: #f3f3f3;\n  }\n`;\n_c5 = Tr;\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const getAllEmployees = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/employees/');\n      setEmployees(response.data.employees);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching employees:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  useEffect(() => {\n    getAllEmployees();\n  }, []);\n  const columns = [{\n    Header: 'Employee ID',\n    accessor: 'employeeId'\n  }, {\n    Header: 'Name',\n    accessor: 'employeeName'\n  }, {\n    Header: 'Mobile',\n    accessor: 'mobileNumber'\n  }, {\n    Header: 'Email',\n    accessor: 'email'\n  }, {\n    Header: 'Primary Role',\n    accessor: 'primaryRole'\n  }, {\n    Header: 'Additional Roles',\n    accessor: 'additionalRoles'\n  }, {\n    Header: 'Data Entitlements',\n    accessor: 'dataEntitlements'\n  }];\n  const tableInstance = useTable({\n    columns,\n    data: employees\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(Tr, {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(Th, {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(Tr, {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(Td, {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"AO9VvaJGQ7zNOQFp7nTefvWUmYg=\", false, function () {\n  return [useTable];\n});\n_c6 = EmployeeList;\nexport default EmployeeList;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"TableContainer\");\n$RefreshReg$(_c2, \"StyledTable\");\n$RefreshReg$(_c3, \"Th\");\n$RefreshReg$(_c4, \"Td\");\n$RefreshReg$(_c5, \"Tr\");\n$RefreshReg$(_c6, \"EmployeeList\");","map":{"version":3,"names":["React","useEffect","useState","axios","useTable","styled","jsxDEV","_jsxDEV","TableContainer","div","_c","StyledTable","table","_c2","Th","th","_c3","Td","td","_c4","Tr","tr","_c5","EmployeeList","_s","employees","setEmployees","getAllEmployees","response","get","data","error","_error$response","console","message","columns","Header","accessor","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","fileName","_jsxFileName","lineNumber","columnNumber","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c6","$RefreshReg$"],"sources":["D:/diagnostics-backend/diagnostics/diagnostics-frontend/src/Components/EmployeeList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable } from '@tanstack/react-table';\r\nimport styled from 'styled-components';\r\n\r\nconst TableContainer = styled.div`\r\n  width: 80%;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n  background: #f8f9fa;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-family: Arial, sans-serif;\r\n  background: #ffffff;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  background: linear-gradient(to right, #ff512f, #dd2476);\r\n  color: white;\r\n  padding: 12px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n  text-align: left;\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  &:nth-child(even) {\r\n    background: #f3f3f3;\r\n  }\r\n`;\r\n\r\nconst EmployeeList = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const getAllEmployees = async () => {\r\n    try {\r\n      const response = await axios.get('http://127.0.0.1:8000/employees/');\r\n      setEmployees(response.data.employees);\r\n    } catch (error) {\r\n      console.error('Error fetching employees:', error.response?.data || error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { Header: 'Employee ID', accessor: 'employeeId' },\r\n    { Header: 'Name', accessor: 'employeeName' },\r\n    { Header: 'Mobile', accessor: 'mobileNumber' },\r\n    { Header: 'Email', accessor: 'email' },\r\n    { Header: 'Primary Role', accessor: 'primaryRole' },\r\n    { Header: 'Additional Roles', accessor: 'additionalRoles' },\r\n    { Header: 'Data Entitlements', accessor: 'dataEntitlements' }\r\n  ];\r\n\r\n  const tableInstance = useTable({ columns, data: employees });\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\r\n\r\n  return (\r\n    <TableContainer>\r\n      <h2>Employee List</h2>\r\n      <StyledTable {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <Tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <Th {...column.getHeaderProps()}>{column.render('Header')}</Th>\r\n              ))}\r\n            </Tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row);\r\n            return (\r\n              <Tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => (\r\n                  <Td {...cell.getCellProps()}>{cell.render('Cell')}</Td>\r\n                ))}\r\n              </Tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </StyledTable>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,cAAc;AAUpB,MAAMG,WAAW,GAAGN,MAAM,CAACO,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,WAAW;AASjB,MAAMG,EAAE,GAAGT,MAAM,CAACU,EAAE;AACpB;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,EAAE;AAOR,MAAMG,EAAE,GAAGZ,MAAM,CAACa,EAAE;AACpB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,EAAE;AAMR,MAAMG,EAAE,GAAGf,MAAM,CAACgB,EAAE;AACpB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,EAAE;AAMR,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMyB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,kCAAkC,CAAC;MACpEH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACL,SAAS,CAAC;IACvC,CAAC,CAAC,OAAOM,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdC,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACnF;EACF,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd0B,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,OAAO,GAAG,CACd;IAAEC,MAAM,EAAE,aAAa;IAAEC,QAAQ,EAAE;EAAa,CAAC,EACjD;IAAED,MAAM,EAAE,MAAM;IAAEC,QAAQ,EAAE;EAAe,CAAC,EAC5C;IAAED,MAAM,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAAe,CAAC,EAC9C;IAAED,MAAM,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAQ,CAAC,EACtC;IAAED,MAAM,EAAE,cAAc;IAAEC,QAAQ,EAAE;EAAc,CAAC,EACnD;IAAED,MAAM,EAAE,kBAAkB;IAAEC,QAAQ,EAAE;EAAkB,CAAC,EAC3D;IAAED,MAAM,EAAE,mBAAmB;IAAEC,QAAQ,EAAE;EAAmB,CAAC,CAC9D;EAED,MAAMC,aAAa,GAAGlC,QAAQ,CAAC;IAAE+B,OAAO;IAAEL,IAAI,EAAEL;EAAU,CAAC,CAAC;EAC5D,MAAM;IAAEc,aAAa;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGL,aAAa;EAE1F,oBACE/B,OAAA,CAACC,cAAc;IAAAoC,QAAA,gBACbrC,OAAA;MAAAqC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBzC,OAAA,CAACI,WAAW;MAAA,GAAK4B,aAAa,CAAC,CAAC;MAAAK,QAAA,gBAC9BrC,OAAA;QAAAqC,QAAA,EACGH,YAAY,CAACQ,GAAG,CAACC,WAAW,iBAC3B3C,OAAA,CAACa,EAAE;UAAA,GAAK8B,WAAW,CAACC,mBAAmB,CAAC,CAAC;UAAAP,QAAA,EACtCM,WAAW,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM,iBAC7B9C,OAAA,CAACO,EAAE;YAAA,GAAKuC,MAAM,CAACC,cAAc,CAAC,CAAC;YAAAV,QAAA,EAAGS,MAAM,CAACE,MAAM,CAAC,QAAQ;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAC/D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRzC,OAAA;QAAA,GAAWiC,iBAAiB,CAAC,CAAC;QAAAI,QAAA,EAC3BF,IAAI,CAACO,GAAG,CAACO,GAAG,IAAI;UACfb,UAAU,CAACa,GAAG,CAAC;UACf,oBACEjD,OAAA,CAACa,EAAE;YAAA,GAAKoC,GAAG,CAACC,WAAW,CAAC,CAAC;YAAAb,QAAA,EACtBY,GAAG,CAACE,KAAK,CAACT,GAAG,CAACU,IAAI,iBACjBpD,OAAA,CAACU,EAAE;cAAA,GAAK0C,IAAI,CAACC,YAAY,CAAC,CAAC;cAAAhB,QAAA,EAAGe,IAAI,CAACJ,MAAM,CAAC,MAAM;YAAC;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACvD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAET,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAErB,CAAC;AAACxB,EAAA,CAzDID,YAAY;EAAA,QA0BMnB,QAAQ;AAAA;AAAAyD,GAAA,GA1B1BtC,YAAY;AA2DlB,eAAeA,YAAY;AAAC,IAAAb,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAuC,GAAA;AAAAC,YAAA,CAAApD,EAAA;AAAAoD,YAAA,CAAAjD,GAAA;AAAAiD,YAAA,CAAA9C,GAAA;AAAA8C,YAAA,CAAA3C,GAAA;AAAA2C,YAAA,CAAAxC,GAAA;AAAAwC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}