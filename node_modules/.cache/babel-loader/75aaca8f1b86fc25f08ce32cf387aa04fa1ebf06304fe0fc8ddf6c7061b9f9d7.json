{"ast":null,"code":"var _jsxFileName = \"D:\\\\diagnostics-backend\\\\diagnostics\\\\diagnostics-frontend\\\\src\\\\Components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableContainer = styled.div`\n  width: 80%;\n  margin: auto;\n  margin-top: 20px;\n  padding: 20px;\n  background: #f8f9fa;\n  border-radius: 10px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n`;\n_c = TableContainer;\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-family: Arial, sans-serif;\n  background: #ffffff;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n_c2 = StyledTable;\nconst Th = styled.th`\n  background: linear-gradient(to right, #ff512f, #dd2476);\n  color: white;\n  padding: 12px;\n  text-align: left;\n`;\n_c3 = Th;\nconst Td = styled.td`\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n  text-align: left;\n`;\n_c4 = Td;\nconst Tr = styled.tr`\n  &:nth-child(even) {\n    background: #f3f3f3;\n  }\n`;\n_c5 = Tr;\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const getAllEmployees = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/employees/');\n      setEmployees(response.data.employees);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching employees:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  useEffect(() => {\n    getAllEmployees();\n  }, []);\n  const columns = [{\n    accessorKey: 'employeeId',\n    header: 'Employee ID'\n  }, {\n    accessorKey: 'employeeName',\n    header: 'Name'\n  }, {\n    accessorKey: 'mobileNumber',\n    header: 'Mobile'\n  }, {\n    accessorKey: 'email',\n    header: 'Email'\n  }, {\n    accessorKey: 'primaryRole',\n    header: 'Primary Role'\n  }, {\n    accessorKey: 'additionalRoles',\n    header: 'Additional Roles'\n  }, {\n    accessorKey: 'dataEntitlements',\n    header: 'Data Entitlements'\n  }];\n  const table = useReactTable({\n    data: employees,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(Tr, {\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(Th, {\n            children: flexRender(column.column.columnDef.header, column.getContext())\n          }, column.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(Tr, {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(Td, {\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"XAPwCQP33m1eQBcp9NHYBNBt6Ng=\", false, function () {\n  return [useReactTable];\n});\n_c6 = EmployeeList;\nexport default EmployeeList;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"TableContainer\");\n$RefreshReg$(_c2, \"StyledTable\");\n$RefreshReg$(_c3, \"Th\");\n$RefreshReg$(_c4, \"Td\");\n$RefreshReg$(_c5, \"Tr\");\n$RefreshReg$(_c6, \"EmployeeList\");","map":{"version":3,"names":["React","useEffect","useState","axios","useReactTable","getCoreRowModel","flexRender","styled","jsxDEV","_jsxDEV","TableContainer","div","_c","StyledTable","table","_c2","Th","th","_c3","Td","td","_c4","Tr","tr","_c5","EmployeeList","_s","employees","setEmployees","getAllEmployees","response","get","data","error","_error$response","console","message","columns","accessorKey","header","children","fileName","_jsxFileName","lineNumber","columnNumber","getHeaderGroups","map","headerGroup","headers","column","columnDef","getContext","id","getRowModel","rows","row","getVisibleCells","cell","_c6","$RefreshReg$"],"sources":["D:/diagnostics-backend/diagnostics/diagnostics-frontend/src/Components/EmployeeList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\r\nimport styled from 'styled-components';\r\n\r\nconst TableContainer = styled.div`\r\n  width: 80%;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n  background: #f8f9fa;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-family: Arial, sans-serif;\r\n  background: #ffffff;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  background: linear-gradient(to right, #ff512f, #dd2476);\r\n  color: white;\r\n  padding: 12px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n  text-align: left;\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  &:nth-child(even) {\r\n    background: #f3f3f3;\r\n  }\r\n`;\r\n\r\nconst EmployeeList = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const getAllEmployees = async () => {\r\n    try {\r\n      const response = await axios.get('http://127.0.0.1:8000/employees/');\r\n      setEmployees(response.data.employees);\r\n    } catch (error) {\r\n      console.error('Error fetching employees:', error.response?.data || error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { accessorKey: 'employeeId', header: 'Employee ID' },\r\n    { accessorKey: 'employeeName', header: 'Name' },\r\n    { accessorKey: 'mobileNumber', header: 'Mobile' },\r\n    { accessorKey: 'email', header: 'Email' },\r\n    { accessorKey: 'primaryRole', header: 'Primary Role' },\r\n    { accessorKey: 'additionalRoles', header: 'Additional Roles' },\r\n    { accessorKey: 'dataEntitlements', header: 'Data Entitlements' }\r\n  ];\r\n\r\n  const table = useReactTable({\r\n    data: employees,\r\n    columns,\r\n    getCoreRowModel: getCoreRowModel(),\r\n  });\r\n\r\n  return (\r\n    <TableContainer>\r\n      <h2>Employee List</h2>\r\n      <StyledTable>\r\n        <thead>\r\n          {table.getHeaderGroups().map(headerGroup => (\r\n            <Tr key={headerGroup.id}>\r\n              {headerGroup.headers.map(column => (\r\n                <Th key={column.id}>{flexRender(column.column.columnDef.header, column.getContext())}</Th>\r\n              ))}\r\n            </Tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {table.getRowModel().rows.map(row => (\r\n            <Tr key={row.id}>\r\n              {row.getVisibleCells().map(cell => (\r\n                <Td key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</Td>\r\n              ))}\r\n            </Tr>\r\n          ))}\r\n        </tbody>\r\n      </StyledTable>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,UAAU,QAAQ,uBAAuB;AAClF,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,cAAc;AAUpB,MAAMG,WAAW,GAAGN,MAAM,CAACO,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,WAAW;AASjB,MAAMG,EAAE,GAAGT,MAAM,CAACU,EAAE;AACpB;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,EAAE;AAOR,MAAMG,EAAE,GAAGZ,MAAM,CAACa,EAAE;AACpB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,EAAE;AAMR,MAAMG,EAAE,GAAGf,MAAM,CAACgB,EAAE;AACpB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,EAAE;AAMR,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM2B,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,kCAAkC,CAAC;MACpEH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACL,SAAS,CAAC;IACvC,CAAC,CAAC,OAAOM,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdC,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACnF;EACF,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACd4B,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,OAAO,GAAG,CACd;IAAEC,WAAW,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAc,CAAC,EACpD;IAAED,WAAW,EAAE,cAAc;IAAEC,MAAM,EAAE;EAAO,CAAC,EAC/C;IAAED,WAAW,EAAE,cAAc;IAAEC,MAAM,EAAE;EAAS,CAAC,EACjD;IAAED,WAAW,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAQ,CAAC,EACzC;IAAED,WAAW,EAAE,aAAa;IAAEC,MAAM,EAAE;EAAe,CAAC,EACtD;IAAED,WAAW,EAAE,iBAAiB;IAAEC,MAAM,EAAE;EAAmB,CAAC,EAC9D;IAAED,WAAW,EAAE,kBAAkB;IAAEC,MAAM,EAAE;EAAoB,CAAC,CACjE;EAED,MAAMzB,KAAK,GAAGV,aAAa,CAAC;IAC1B4B,IAAI,EAAEL,SAAS;IACfU,OAAO;IACPhC,eAAe,EAAEA,eAAe,CAAC;EACnC,CAAC,CAAC;EAEF,oBACEI,OAAA,CAACC,cAAc;IAAA8B,QAAA,gBACb/B,OAAA;MAAA+B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnC,OAAA,CAACI,WAAW;MAAA2B,QAAA,gBACV/B,OAAA;QAAA+B,QAAA,EACG1B,KAAK,CAAC+B,eAAe,CAAC,CAAC,CAACC,GAAG,CAACC,WAAW,iBACtCtC,OAAA,CAACa,EAAE;UAAAkB,QAAA,EACAO,WAAW,CAACC,OAAO,CAACF,GAAG,CAACG,MAAM,iBAC7BxC,OAAA,CAACO,EAAE;YAAAwB,QAAA,EAAkBlC,UAAU,CAAC2C,MAAM,CAACA,MAAM,CAACC,SAAS,CAACX,MAAM,EAAEU,MAAM,CAACE,UAAU,CAAC,CAAC;UAAC,GAA3EF,MAAM,CAACG,EAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuE,CAC1F;QAAC,GAHKG,WAAW,CAACK,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAInB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRnC,OAAA;QAAA+B,QAAA,EACG1B,KAAK,CAACuC,WAAW,CAAC,CAAC,CAACC,IAAI,CAACR,GAAG,CAACS,GAAG,iBAC/B9C,OAAA,CAACa,EAAE;UAAAkB,QAAA,EACAe,GAAG,CAACC,eAAe,CAAC,CAAC,CAACV,GAAG,CAACW,IAAI,iBAC7BhD,OAAA,CAACU,EAAE;YAAAqB,QAAA,EAAgBlC,UAAU,CAACmD,IAAI,CAACR,MAAM,CAACC,SAAS,CAACO,IAAI,EAAEA,IAAI,CAACN,UAAU,CAAC,CAAC;UAAC,GAAnEM,IAAI,CAACL,EAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiE,CAClF;QAAC,GAHKW,GAAG,CAACH,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAErB,CAAC;AAAClB,EAAA,CAzDID,YAAY;EAAA,QA0BFrB,aAAa;AAAA;AAAAsD,GAAA,GA1BvBjC,YAAY;AA2DlB,eAAeA,YAAY;AAAC,IAAAb,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAkC,GAAA;AAAAC,YAAA,CAAA/C,EAAA;AAAA+C,YAAA,CAAA5C,GAAA;AAAA4C,YAAA,CAAAzC,GAAA;AAAAyC,YAAA,CAAAtC,GAAA;AAAAsC,YAAA,CAAAnC,GAAA;AAAAmC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}