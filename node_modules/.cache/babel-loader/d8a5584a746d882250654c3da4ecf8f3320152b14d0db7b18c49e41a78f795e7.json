{"ast":null,"code":"var _jsxFileName = \"D:\\\\diagnostics-backend\\\\diagnostics\\\\diagnostics-frontend\\\\src\\\\Components\\\\EmployeeRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { registerEmployee } from \"../Components/services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeRegister = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    employee_id: \"\",\n    employee_name: \"\",\n    role: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const navigate = useNavigate();\n  const roles = [\"Admin\", \"Receptionist\", \"Sample Collector\", \"Sales Person\", \"Lab Technician\", \"Doctor\", \"Accounts\"];\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n    const {\n      confirmPassword,\n      ...data\n    } = formData;\n    try {\n      const response = await registerEmployee(data);\n      alert(response.data.message);\n      navigate(\"/\"); // Redirect after registration\n    } catch (error) {\n      alert(\"Registration failed! \" + error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"employee_id\",\n        placeholder: \"Employee ID\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"employee_name\",\n        placeholder: \"Employee Name\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"role\",\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: role,\n          children: role\n        }, role, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeRegister, \"1TUhImRhawafw63t/R8X2kCE6Js=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeRegister;\nexport default EmployeeRegister;\nvar _c;\n$RefreshReg$(_c, \"EmployeeRegister\");","map":{"version":3,"names":["React","useState","registerEmployee","useNavigate","jsxDEV","_jsxDEV","EmployeeRegister","_s","formData","setFormData","employee_id","employee_name","role","password","confirmPassword","navigate","roles","handleChange","e","target","name","value","handleSubmit","preventDefault","alert","data","response","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","map","_c","$RefreshReg$"],"sources":["D:/diagnostics-backend/diagnostics/diagnostics-frontend/src/Components/EmployeeRegister.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { registerEmployee } from \"../Components/services/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst EmployeeRegister = () => {\r\n  const [formData, setFormData] = useState({\r\n    employee_id: \"\",\r\n    employee_name: \"\",\r\n    role: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const roles = [\r\n    \"Admin\",\r\n    \"Receptionist\",\r\n    \"Sample Collector\",\r\n    \"Sales Person\",\r\n    \"Lab Technician\",\r\n    \"Doctor\",\r\n    \"Accounts\",\r\n  ];\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      alert(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    const { confirmPassword, ...data } = formData;\r\n\r\n    try {\r\n      const response = await registerEmployee(data);\r\n      alert(response.data.message);\r\n      navigate(\"/\"); // Redirect after registration\r\n    } catch (error) {\r\n      alert(\"Registration failed! \" + error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2>Employee Registration</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"employee_id\" placeholder=\"Employee ID\" onChange={handleChange} required />\r\n        <input type=\"text\" name=\"employee_name\" placeholder=\"Employee Name\" onChange={handleChange} required />\r\n\r\n        <select name=\"role\" onChange={handleChange} required>\r\n          <option value=\"\">Select Role</option>\r\n          {roles.map((role) => (\r\n            <option key={role} value={role}>{role}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n        <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" onChange={handleChange} required />\r\n\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}